{
  "swagger": "2.0",
  "info": {
    "title": "IMN Gateway API ",
    "description": "# The REST API of IMN system - Gateway\r\n## Overview\r\nThe REST APIs provide programmatic access to read and write IMN data. \r\n\r\nThis API have to be implemented by the marketplaces to be able to receive data from IMN.\r\n\r\n\r\nThe main features are:\r\n- Receive merchant events\r\n- Receive merchant offers\r\n- Receive merchant order changes\r\n- ...\r\n\r\n\r\n## Things to keep in mind\r\n### API Rate Limits\r\n- The IMN REST API is limited to 100 calls/minute.\r\n\r\n### Media type\r\nThe default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.\r\n\r\n### Required content type\r\nThe required and default encoding for the request and responses is UTF8.\r\n\r\n### Required date time format\r\nAll our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.\r\n\r\n### Base URL\r\nAll URLs returned by the IMN API are relative to this base URL, and all requests to the REST API must use this base URL template.\r\n\r\nYou can test our API on https://gateway-api-docs.imn.io/swagger-ui\r\n\r\nYou can contact us on [gitter, #IMN/API](https://gitter.im/IMN/API)\r\n\r\n",
    "version": "1.0",
    "x-logo": {
      "url": "https://imngo.blob.core.windows.net/imngo/images/imn-logo.png",
      "backgroundColor": "#FFFFFF"
    },
    "contact": {
      "email": "support@imn.io"
    },
    "license": {
      "name": "IMN",
      "url": "https://go.imn.io"
    }
  },
  "host": "api.imn.io",
  "basePath": "",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Gateway API - Merchants - Global",
      "x-displayName": "Global"
    },
    {
      "name": "Gateway API - Offers - Global",
      "x-displayName": "Global"
    }
  ],
  "paths": {
    "/gateway/merchants/v1/{marketplaceCode}/ping": {
      "get": {
        "tags": [
          "Gateway API - Merchants - Global"
        ],
        "summary": "Ping the status of your merchant system",
        "operationId": "PingGatewayMerchantApi",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the API is up!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/healthCheck"
              }
            }
          },
          "503": {
            "description": "The status of your API is down...",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/healthCheck"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/merchants/v1/{marketplaceCode}/{merchantCode}/checkApiCredential": {
      "post": {
        "tags": [
          "Gateway API - Merchants - Global"
        ],
        "summary": "Check Merchant Marketplace API Credential",
        "operationId": "CheckMerchantMarketplaceApiCredential",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/marketplaceApiCredential"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The api credential is valid"
          },
          "401": {
            "description": "The api credential is invalid",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/merchants/v1/{marketplaceCode}/{merchantCode}/events": {
      "post": {
        "tags": [
          "Gateway API - Merchants - Global"
        ],
        "summary": "Save a batch of merchant events",
        "operationId": "SynchronizeMerchantEvents",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": "true",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/merchantEventPushed"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant events have been received"
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/ping": {
      "get": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Ping the status of your offer system",
        "operationId": "PingGatewayOfferApi",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the API is up!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/healthCheck"
              }
            }
          },
          "503": {
            "description": "The status of your API is down...",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/healthCheck"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/start": {
      "post": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Start the publication of merchant offers",
        "operationId": "StartMerchantOffersPublication",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/correlationIdParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant offers changes have been saved!"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest"
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/events": {
      "post": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Publish merchant offers",
        "operationId": "PublishMerchantOffers",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/correlationIdParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "type": "array",
              "minItems": "1",
              "maxItems": "1000",
              "items": {
                "$ref": "#/definitions/merchantOfferEventBase"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The merchant offers events have been received!"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest"
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/complete": {
      "post": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Complete the publication of the merchant offers",
        "operationId": "CompleteMerchantOffersPublication",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/correlationIdParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "name": "request",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/completePublicationRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The merchant offers publication have been completed!"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest"
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/publications/{correlationId}/status": {
      "get": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Get merchant offers publication status",
        "operationId": "GetMerchantOffersPublicationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/correlationIdParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The publication status",
            "schema": {
              "$ref": "#/definitions/feedPublicationStatusResponse"
            }
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest"
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/events": {
      "post": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Push a batch of merchant marketplace offers events",
        "operationId": "PushMerchantOfferEvents",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "name": "request",
            "in": "body",
            "schema": {
              "type": "array",
              "minItems": "1",
              "maxItems": "1000",
              "items": {
                "$ref": "#/definitions/merchantOfferEventBase"
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The merchant offers events been received"
          },
          "400": {
            "$ref": "#/responses/offerBatchBadRequest"
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/subscriptions": {
      "post": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Subscribe to offers events",
        "operationId": "Subscribe",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "$ref": "#/parameters/callBackUrlInQueryParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Subscription created",
            "schema": {
              "$ref": "#/definitions/webHookSubscription"
            }
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/subscriptions/{subscriptionId}": {
      "delete": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Unsubscribe to offers events",
        "operationId": "Unsubscribe",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Unsubscription done"
          },
          "404": {
            "description": "Subscription not found",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/reports/generate": {
      "post": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Generate merchant offers report",
        "operationId": "GenerateMerchantOffersReport",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The marketplace report number",
            "schema": {
              "$ref": "#/definitions/generateReportResponse"
            }
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/reports/status": {
      "get": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Get merchant offer list",
        "operationId": "GetMerchantOffersReportGenerationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "name": "marketplaceReportNumber",
            "in": "query",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The marketplace report number",
            "schema": {
              "$ref": "#/definitions/reportGenerationStatusResponse"
            }
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/list": {
      "get": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Get merchant offer list",
        "operationId": "GetMerchantOfferList",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/paginationContinuationTokenQueryStringParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          },
          {
            "name": "marketplaceReportNumber",
            "description": "In some case, the marketplace has to generate a report to get access to the offer list. In that case we will have to send the marketplace report number.",
            "in": "query",
            "required": "false",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The merchant offer list",
            "schema": {
              "$ref": "#/definitions/merchantOfferPaginatedList"
            }
          },
          "404": {
            "description": "In case the page does not exists",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    },
    "/gateway/offers/v1/{marketplaceCode}/{merchantCode}/{sku}": {
      "get": {
        "tags": [
          "Gateway API - Offers - Global"
        ],
        "summary": "Get merchant offer",
        "operationId": "GetMerchantOffer",
        "parameters": [
          {
            "$ref": "#/parameters/marketplaceCodeParameter"
          },
          {
            "$ref": "#/parameters/merchantCodeParameter"
          },
          {
            "$ref": "#/parameters/skuPathParameter"
          },
          {
            "$ref": "#/parameters/credentialHeaderParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The merchant offer",
            "schema": {
              "$ref": "#/definitions/merchantOffer"
            }
          },
          "404": {
            "$ref": "#/responses/offerNotFound"
          },
          "403": {
            "description": "Credentials are wrong",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "503": {
            "description": "The adapter is not available",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "502": {
            "description": "The marketplace behind this adapter has responded an error",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "504": {
            "description": "The marketplace behind this adapter has time out",
            "schema": {
              "$ref": "#/definitions/errorResponseMessage"
            }
          },
          "default": {
            "$ref": "#/responses/GeneralError"
          }
        }
      }
    }
  },
  "definitions": {
    "healthCheck": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Health check name",
          "example": "MyDatabaseCheck"
        },
        "message": {
          "type": "string",
          "description": "Gets the status message of the check.",
          "example": "Database connection OK"
        },
        "status": {
          "$ref": "#/definitions/healthCheckStatus"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "marketplaceApiCredential": {
      "description": "The API credentials of the merchant on his marketplace.",
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "example": {
          "login": "mylogin",
          "password": "myPassword"
        }
      }
    },
    "errorResponseMessage": {
      "x-exclude": "true",
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "uniqueItems": "false",
          "items": {
            "$ref": "#/definitions/userErrorMessage"
          }
        }
      }
    },
    "merchantEventPushed": {
      "x-exclude": "true",
      "type": "object",
      "discriminator": "eventType",
      "required": [
        "merchantCode"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "eventType": {
          "x-exclude": "true",
          "type": "string"
        }
      }
    },
    "healthCheckStatus": {
      "type": "string",
      "description": "Possible status values of a health check result.\n* degraded:  The check is degraded, failing but not critical\n* healthy: The check is healthy\n* ignored: The check was ignored\n* unhealthy:  The check is unhealthy\n",
      "enum": [
        "degraded",
        "healthy",
        "ignored",
        "unhealthy"
      ]
    },
    "userErrorMessage": {
      "x-exclude": "true",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "docUrl": {
          "$ref": "#/definitions/docUrl"
        },
        "code": {
          "$ref": "#/definitions/errorCode"
        },
        "message": {
          "type": "string",
          "description": "The error message",
          "example": "There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527\n"
        },
        "cultureName": {
          "$ref": "#/definitions/cultureName"
        },
        "arguments": {
          "$ref": "#/definitions/userErrorMessageArguments"
        }
      }
    },
    "merchantCode": {
      "type": "string",
      "description": "The merchant code identifier in IMN",
      "pattern": "^([A-Z|0-9]){5}$",
      "x-pattern": "^([A-Z|0-9]){5}$",
      "example": "MLT01"
    },
    "docUrl": {
      "x-exclude": "true",
      "type": "string",
      "format": "uri",
      "description": "The documentation related to this operation.",
      "example": "https://api-docs.imn.io/#operation/EnableChannelCatalog"
    },
    "errorCode": {
      "x-exclude": "true",
      "type": "string",
      "description": "the error code. The error code can be a pattern containing the argument's name",
      "example": "CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)"
    },
    "cultureName": {
      "x-exclude": "true",
      "type": "string",
      "description": "If the error is translated, the culture name will be indicated",
      "example": "en",
      "x-lov": "Go2CultureName"
    },
    "userErrorMessageArguments": {
      "x-exclude": "true",
      "type": "object",
      "description": "a dictionary string/object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "merchantOfferEventBase": {
      "x-exclude": "true",
      "type": "object",
      "discriminator": "eventType",
      "required": [
        "eventType"
      ],
      "properties": {
        "eventType": {
          "type": "string"
        }
      }
    },
    "completePublicationRequest": {
      "type": "object",
      "required": [
        "succeed"
      ],
      "properties": {
        "succeed": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userErrorMessage"
          }
        }
      }
    },
    "feedPublicationStatusResponse": {
      "description": "Publication Status Response",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/feedPublicationStatus"
        }
      }
    },
    "webHookSubscription": {
      "type": "object",
      "required": [
        "id",
        "callBackUrl"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "callBackUrl": {
          "$ref": "#/definitions/httpUrl"
        }
      }
    },
    "generateReportResponse": {
      "description": "Generate Report Response",
      "type": "object",
      "required": [
        "marketplaceReportNumber"
      ],
      "properties": {
        "marketplaceReportNumber": {
          "$ref": "#/definitions/marketplaceReportNumber"
        }
      }
    },
    "reportGenerationStatusResponse": {
      "description": "Report generation Status Response",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/reportGenerationStatus"
        }
      }
    },
    "merchantOfferPaginatedList": {
      "type": "object",
      "properties": {
        "paginationContinuationToken": {
          "$ref": "#/definitions/paginationContinuationToken"
        },
        "merchantOffers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/merchantOffer"
          }
        }
      }
    },
    "merchantOffer": {
      "allOf": [
        {
          "$ref": "#/definitions/merchantOfferIdentifier"
        },
        {
          "type": "object",
          "description": "The defaultDeliveryMethod is required if the deliverySpecifications is fulfilled",
          "required": [
            "merchantCode",
            "sku",
            "gtin",
            "itemCondition",
            "price",
            "priceCurrency",
            "deliveryLeadTime",
            "inventoryLevel",
            "lastUpdateUtcDate"
          ],
          "properties": {
            "gtin": {
              "$ref": "#/definitions/gtin"
            },
            "itemCondition": {
              "$ref": "#/definitions/itemCondition"
            },
            "fulfilledBy": {
              "$ref": "#/definitions/fulfilledBy"
            },
            "price": {
              "$ref": "#/definitions/price"
            },
            "priceCurrency": {
              "$ref": "#/definitions/priceCurrency"
            },
            "minPrice": {
              "$ref": "#/definitions/minPrice"
            },
            "discount": {
              "$ref": "#/definitions/priceSpecification"
            },
            "deliveryLeadTime": {
              "$ref": "#/definitions/deliveryLeadTime"
            },
            "inventoryLevel": {
              "$ref": "#/definitions/inventoryLevel"
            },
            "defaultDeliveryMethod": {
              "$ref": "#/definitions/deliveryMethod"
            },
            "deliverySpecifications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/deliverySpecification"
              }
            },
            "lastUpdateUtcDate": {
              "type": "string",
              "format": "date-time",
              "example": "2018-02-24T14:24:35"
            },
            "sourceMarketplaceCode": {
              "$ref": "#/definitions/marketplaceCode"
            }
          }
        }
      ]
    },
    "feedPublicationStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "InProgress",
        "Success",
        "Failed"
      ],
      "default": "NotStarted"
    },
    "httpUrl": {
      "x-exclude": "true",
      "description": "The URL <a href=\"https://en.wikipedia.org/wiki/URL\">https://en.wikipedia.org/wiki/URL</a>",
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "x-pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "example": "http://www.mydomain.com"
    },
    "marketplaceReportNumber": {
      "type": "string",
      "description": "The marketplace report number. It's used by offer gateway when we ask report generation."
    },
    "reportGenerationStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "InProgress",
        "Success",
        "Failed"
      ],
      "default": "NotStarted"
    },
    "paginationContinuationToken": {
      "type": "string",
      "description": "Just a string value that will help to get the next page"
    },
    "merchantOfferIdentifier": {
      "type": "object",
      "required": [
        "merchantCode",
        "sku"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "sku": {
          "$ref": "#/definitions/sku"
        }
      }
    },
    "itemCondition": {
      "type": "string",
      "enum": [
        "NewCondition",
        "RefurbishedCondition",
        "UsedAsNewCondition",
        "UsedVeryGoodCondition",
        "UsedGoodCondition",
        "UsedAcceptableCondition"
      ]
    },
    "fulfilledBy": {
      "type": "string",
      "description": "The marketplace in charge of the delivery on this offer."
    },
    "price": {
      "x-exclude": "true",
      "type": "number",
      "format": "decimal",
      "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes. http://schema.org/price"
    },
    "priceCurrency": {
      "type": "string",
      "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\nUsage guidelines:\nUse the priceCurrency property (with ISO 4217 codes e.g. USD) instead of including ambiguous symbols such as $ in the value. http://schema.org/priceCurrency\n"
    },
    "minPrice": {
      "type": "number",
      "format": "decimal",
      "description": "The lowest price if the price is a range. http://schema.org/minPrice"
    },
    "priceSpecification": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/price"
        },
        "validFrom": {
          "$ref": "#/definitions/validFrom"
        },
        "validThrough": {
          "$ref": "#/definitions/validThrough"
        }
      }
    },
    "deliveryLeadTime": {
      "type": "number",
      "format": "int16",
      "description": "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. http://schema.org/deliveryLeadTime"
    },
    "inventoryLevel": {
      "type": "number",
      "format": "decimal",
      "description": "The current approximate inventory level for the item or items. http://schema.org/inventoryLevel"
    },
    "deliverySpecification": {
      "type": "object",
      "required": [
        "deliveryMethod",
        "price"
      ],
      "properties": {
        "deliveryMethod": {
          "$ref": "#/definitions/deliveryMethod"
        },
        "price": {
          "$ref": "#/definitions/price"
        },
        "additionalPrice": {
          "$ref": "#/definitions/price"
        }
      }
    },
    "gtin": {
      "type": "string",
      "description": "Global Trade Item Number (GTIN) of the item.\nSupported values:\n\n- UPC (in North America / GTIN-12)\n12-digit number like 323456789012\n8-digit UPC-E codes should be converted to 12-digit codes\n- EAN (in Europe / GTIN-13)\n13-digit number like 3001234567892\n- JAN (in Japan / GTIN-13)\n8 or 13-digit number like 49123456 or 4901234567894\n- ISBN (for books)\n10 or 13-digit number like 1455582344 or 978-1455582341. If you have both, only include the 13-digit number. ISBN-10 are deprecated and should be converted to ISBN-13\n- ITF-14 (for multipacks / GTIN-14)\n14-digit number like 10856435001702\n\nSchema.org property:\n- [Offer.gtin8](http://schema.org/gtin8)\n- [Offer.gtin12](http://schema.org/gtin12)\n- [Offer.gtin13](http://schema.org/gtin13)\n- [Offer.gtin14](http://schema.org/gtin14)\n- [Offer.isbn](http://schema.org/isbn)\n",
      "maxLength": "50"
    },
    "deliveryMethod": {
      "type": "string",
      "description": "A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person."
    },
    "marketplaceCode": {
      "type": "string",
      "description": "The marketplace code identifier in IMN.\nFor now we have:\n- C1 for Cdiscount\n- E1 for ePrice\n- R1 for Real.DE\n- B1 for BOL\n- E2 for eMAG\n",
      "pattern": "^([A-Z]|[0-9]){2}$",
      "x-pattern": "^([A-Z]|[0-9]){2}$",
      "example": "C1"
    },
    "validFrom": {
      "type": "string",
      "format": "date-time",
      "description": "The date when the item becomes valid. http://schema.org/validFrom"
    },
    "validThrough": {
      "type": "string",
      "format": "date-time",
      "description": "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours. http://schema.org/validThrough"
    },
    "sku": {
      "type": "string",
      "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers. http://schema.org/sku",
      "maxLength": "50"
    },
    "merchantOfferReceived": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantOfferEventBase"
        },
        {
          "$ref": "#/definitions/merchantOffer"
        }
      ]
    },
    "merchantOfferDeleted": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantOfferEventBase"
        },
        {
          "$ref": "#/definitions/merchantOfferIdentifier"
        }
      ]
    },
    "merchantOfferUnpublished": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantOfferEventBase"
        },
        {
          "$ref": "#/definitions/merchantOfferIdentifier"
        },
        {
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/merchantOfferUnpublicationReasonCode"
            }
          }
        }
      ]
    },
    "merchantOfferNotImported": {
      "x-format": "Event",
      "description": "Useful for reporting to explain why this offer has not been imported. NOT USED FOR THE MOMENT.",
      "allOf": [
        {
          "$ref": "#/definitions/merchantOfferEventBase"
        },
        {
          "$ref": "#/definitions/merchantOfferIdentifier"
        },
        {
          "type": "object",
          "properties": {
            "reasons": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/merchantOfferNoneImportationReason"
              }
            }
          }
        }
      ]
    },
    "merchantOfferUnpublicationReasonCode": {
      "type": "string",
      "description": "The reason of the unpublication of an offer",
      "enum": [
        "MerchantMarketplaceOfferPublicationDisabled",
        "Excluded",
        "OfferDisabled"
      ]
    },
    "merchantOfferNoneImportationReason": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/merchantOfferNoneImportationReasonCode"
        },
        "error": {
          "$ref": "#/definitions/userErrorMessage"
        },
        "propertyName": {
          "type": "string",
          "description": "The related property name causing the none importation of the offer"
        },
        "actualValue": {
          "type": "string",
          "description": "The actual value causing the none importation of the offer"
        }
      }
    },
    "merchantOfferNoneImportationReasonCode": {
      "type": "string",
      "description": "A reason code related to a none importation of the offer",
      "enum": [
        "InvalidEAN",
        "InvariantNotAppliable"
      ]
    },
    "merchantCreated": {
      "x-format": "Event",
      "type": "object",
      "description": "When the merchant creates his account on IMN",
      "required": [
        "merchantCode",
        "userId",
        "email"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "userId": {
          "$ref": "#/definitions/userId"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "userIPAddress": {
          "type": "string"
        }
      }
    },
    "merchantAcountInfoUpdated": {
      "x-format": "Event",
      "description": "When the merchant updates his account information",
      "type": "object",
      "required": [
        "merchantCode",
        "userId",
        "companyName",
        "lastName",
        "firstName",
        "country",
        "phoneNumber",
        "currencyCode"
      ],
      "properties": {
        "userId": {
          "$ref": "#/definitions/userId"
        },
        "userEmail": {
          "$ref": "#/definitions/email"
        },
        "userIPAddress": {
          "type": "string"
        },
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "companyName": {
          "$ref": "#/definitions/merchantCompanyName"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/countryIsoCodeAlpha3"
        },
        "phoneNumber": {
          "type": "string"
        },
        "imageUrl": {
          "$ref": "#/definitions/httpUrl"
        },
        "currencyCode": {
          "$ref": "#/definitions/currencyCode"
        },
        "ecommerceSoftwareName": {
          "$ref": "#/definitions/ecommerceSoftwareName"
        }
      }
    },
    "merchantMarketplaceEventBase": {
      "x-exclude": "true",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "type": "object",
          "required": [
            "marketplaceCode"
          ],
          "properties": {
            "marketplaceCode": {
              "$ref": "#/definitions/marketplaceCode"
            }
          }
        }
      ]
    },
    "merchantMarketplaceCredentialConfigured": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "credential"
          ],
          "properties": {
            "credential": {
              "$ref": "#/definitions/marketplaceApiCredential"
            },
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceCredentialExpired": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "marketplaceCode",
            "credential"
          ],
          "properties": {
            "credential": {
              "$ref": "#/definitions/marketplaceApiCredential"
            },
            "checkedDates": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      ]
    },
    "merchantMarketplaceSubscriptionRequested": {
      "x-format": "Event",
      "description": "When the merchant marketplace subscription has been requested",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "externalId": {
              "type": "string",
              "description": "If the request is coming from an external system we will keep the identifier"
            }
          }
        }
      ]
    },
    "merchantMarketplaceSubscriptionAccepted": {
      "x-format": "Event",
      "description": "When the marketplace accept the mechant subscription request",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceSubscriptionRefused": {
      "x-format": "Event",
      "description": "When the marketplace refuses the merchant subscription",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "reason"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "reason": {
              "$ref": "#/definitions/merchantMarketplaceSubscriptionRefusalReason"
            }
          }
        }
      ]
    },
    "merchantMarketplaceSubscriptionBlocked": {
      "x-format": "Event",
      "description": "When the marketplace blocks the merchant subscription",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "reason"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "reason": {
              "$ref": "#/definitions/merchantMarketplaceSubscriptionRefusalReason"
            }
          }
        }
      ]
    },
    "merchantOffersSourceMarketplaceDeclared": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantOffersSourceMarketplaceUndeclared": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceOfferImportationEnabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceOfferImportationDisabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceOfferPublicationEnabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceOfferPublicationDisabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceOrderImportationEnabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceOrderImportationDisabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "externalMerchantMarketplaceSubscriptionsRequested": {
      "x-format": "Event",
      "type": "object",
      "description": "When the merchant marketplace subscription has been requested",
      "required": [
        "merchantCode",
        "userId",
        "sourceMarketplaceCode",
        "targetMarketplacesSubscriptionRequested",
        "subscriptionRequestUtcDate",
        "salesforceSubscriptionId"
      ],
      "properties": {
        "merchantCode": {
          "$ref": "#/definitions/merchantCode"
        },
        "userId": {
          "$ref": "#/definitions/userId"
        },
        "userEmail": {
          "$ref": "#/definitions/email"
        },
        "userIPAddress": {
          "type": "string"
        },
        "sourceMarketplaceCode": {
          "$ref": "#/definitions/marketplaceCode"
        },
        "targetMarketplacesSubscriptionRequested": {
          "type": "array",
          "minItems": "1",
          "uniqueItems": "true",
          "items": {
            "$ref": "#/definitions/marketplaceCode"
          }
        },
        "subscriptionRequestUtcDate": {
          "type": "string",
          "format": "date-time",
          "description": "The exact date time of the subscription request"
        },
        "salesforceSubscriptionId": {
          "type": "string",
          "description": "The Salesforce identifier of the subscription",
          "example": "BLA0O00001v8aNuQAI"
        }
      }
    },
    "merchantMarketplacePricingSettingConfigured": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "ruleType"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "ruleType": {
              "$ref": "#/definitions/marketplacePricingRuleType"
            },
            "value": {
              "$ref": "#/definitions/marketplacePricingValue"
            }
          }
        }
      ]
    },
    "merchantMarketplaceShippingPreparationSettingConfigured": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "ruleType"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "ruleType": {
              "$ref": "#/definitions/marketplacePreparationRuleType"
            },
            "delay": {
              "type": "integer",
              "format": "int32",
              "description": "The delay considering the rule"
            }
          }
        }
      ]
    },
    "merchantMarketplaceShippingDeliverySettingConfigured": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "deliveryMethod",
            "ruleType"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "deliveryMethod": {
              "$ref": "#/definitions/deliveryMethod"
            },
            "ruleType": {
              "$ref": "#/definitions/marketplaceShippingChargeRuleType"
            },
            "charge": {
              "type": "number",
              "example": "3.35",
              "description": "The charge for this delivery mode considering the rule"
            },
            "additionalCharge": {
              "type": "number",
              "example": "1.52",
              "description": "The additional charge for this delivery mode"
            }
          }
        }
      ]
    },
    "merchantMarketplaceShippingDeliverySettingDisabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceShippingDeliverySettingDeleted": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "marketplaceCode",
            "userId",
            "deliveryMethod"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "deliveryMethod": {
              "$ref": "#/definitions/deliveryMethod"
            }
          }
        }
      ]
    },
    "merchantMarketplaceShippingDeliverySettingEnabled": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "marketplaceMerchantCodeConfigured": {
      "x-format": "Event",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode",
            "marketplaceMerchantCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            },
            "marketplaceMerchantCode": {
              "$ref": "#/definitions/marketplaceMerchantCode"
            }
          }
        }
      ]
    },
    "merchantDeleted": {
      "x-format": "Event",
      "description": "When a merchant is deleted from the IMN system",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "eventType",
            "userId",
            "userEmail",
            "userIPAddress"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "merchantMarketplaceDeleted": {
      "x-format": "Event",
      "description": "When the merchant is deleted from IMN system, to notify the marketplace concerned",
      "allOf": [
        {
          "$ref": "#/definitions/merchantEventPushed"
        },
        {
          "$ref": "#/definitions/merchantMarketplaceEventBase"
        },
        {
          "type": "object",
          "required": [
            "merchantCode",
            "userId",
            "marketplaceCode"
          ],
          "properties": {
            "userId": {
              "$ref": "#/definitions/userId"
            },
            "userEmail": {
              "$ref": "#/definitions/email"
            },
            "userIPAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "userId": {
      "x-exclude": "true",
      "format": "guid",
      "description": "The user identifier",
      "type": "string",
      "example": "8a7fbdec-9e71-472e-9974-27d5c1d57cf8"
    },
    "email": {
      "x-exclude": "true",
      "description": "The email",
      "type": "string",
      "format": "email",
      "pattern": "^(.+)@(.+)$",
      "x-pattern": "^(.+)@(.+)$",
      "example": "paulsimon@mysupercompany.com"
    },
    "merchantCompanyName": {
      "type": "string",
      "minLength": "2",
      "x-minLength": "2",
      "maxLength": "100",
      "x-maxLength": "100",
      "description": "Merchant's company name"
    },
    "countryIsoCodeAlpha3": {
      "description": "The country iso code alpha 3 <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\">(ISO 3166-1_alpha-3)</a>",
      "type": "string",
      "pattern": "^[A-Z]{3}$",
      "x-pattern": "^[A-Z]{3}$",
      "x-lov": "Country",
      "example": "FRA"
    },
    "currencyCode": {
      "x-exclude": "true",
      "description": "The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a>\n",
      "type": "string",
      "pattern": "^[A-Z]{3}$",
      "x-pattern": "^[A-Z]{3}$",
      "example": "EUR"
    },
    "ecommerceSoftwareName": {
      "description": "The e-commerce software name of the merchant",
      "type": "string",
      "example": "Prestashop"
    },
    "merchantMarketplaceSubscriptionRefusalReason": {
      "type": "string",
      "minLength": "5",
      "x-minLength": "5",
      "maxLength": "4000",
      "x-maxLength": "4000",
      "description": "The marketplace reason for the subscription's refusal"
    },
    "marketplacePricingRuleType": {
      "type": "string",
      "default": "Same",
      "enum": [
        "PercentIncrease",
        "PercentDecrease",
        "AmountIncrease",
        "AmountDecrease",
        "Same"
      ]
    },
    "marketplacePricingValue": {
      "type": "number",
      "pattern": "^([0-9]{1,13}[.]*[0-9]{0,6})$",
      "x-pattern": "^([0-9]{1,13}[.]*[0-9]{0,6})$",
      "example": "42.01"
    },
    "marketplacePreparationRuleType": {
      "type": "string",
      "enum": [
        "Increase",
        "Decrease",
        "Same",
        "Fixed"
      ],
      "default": "Same",
      "example": "Same"
    },
    "marketplaceShippingChargeRuleType": {
      "type": "string",
      "default": "Same",
      "enum": [
        "PercentIncrease",
        "PercentDecrease",
        "AmountIncrease",
        "AmountDecrease",
        "Same",
        "Fixed"
      ]
    },
    "marketplaceMerchantCode": {
      "type": "string",
      "description": "The merchant code for a marketplace",
      "example": "005145"
    }
  },
  "parameters": {
    "marketplaceCodeParameter": {
      "format": "MarketplaceCode",
      "name": "marketplaceCode",
      "in": "path",
      "required": "true",
      "type": "string",
      "description": "The marketplace code"
    },
    "merchantCodeParameter": {
      "format": "MerchantCode",
      "name": "merchantCode",
      "in": "path",
      "required": "true",
      "type": "string",
      "description": "The merchant code"
    },
    "correlationIdParameter": {
      "name": "correlationId",
      "in": "path",
      "type": "string",
      "format": "CorrelationId",
      "required": "true",
      "description": "It's the guid corresponding to the operation.\n"
    },
    "credentialHeaderParameter": {
      "name": "x-imn-credential",
      "description": "The marketplace credential serialized in json encoded in base64 like the payload of a JWT",
      "in": "header",
      "type": "string",
      "x-format": "MarketplaceApiCredential",
      "required": "true",
      "x-base64": "true"
    },
    "callBackUrlInQueryParameter": {
      "name": "callBackUrl",
      "in": "query",
      "required": "true",
      "type": "string",
      "x-format": "HttpUrl"
    },
    "paginationContinuationTokenQueryStringParameter": {
      "name": "paginationContinuationToken",
      "description": "The pagination continuation token you want to get next page.",
      "in": "query",
      "required": "false",
      "type": "string",
      "format": "PaginationContinuationToken"
    },
    "skuPathParameter": {
      "name": "sku",
      "in": "path",
      "type": "string",
      "format": "Sku",
      "required": "true"
    }
  },
  "responses": {
    "GeneralError": {
      "description": "Occurs when something goes wrong",
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "offerBatchBadRequest": {
      "description": "In case there is an error like:\n- ValidationException\n- DuplicateMerchantOfferOperationException\n- DuplicateMerchantMarketplaceOfferOperationException\n- InvalidMarketplaceCodeException\n- InvalidMerchantCodeException\n",
      "x-exceptions": [
        "ValidationException",
        "DuplicateMerchantOfferOperationException",
        "DuplicateMerchantMarketplaceOfferOperationException",
        "InvalidMarketplaceCodeException",
        "InvalidMerchantCodeException"
      ],
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    },
    "offerNotFound": {
      "description": "When the requested offer is not found",
      "schema": {
        "$ref": "#/definitions/errorResponseMessage"
      }
    }
  },
  "externalDocs": {
    "description": "Find the documentation for IMN's API here",
    "url": "https://api-docs.imn.io/"
  },
  "x-tagGroups": [
    {
      "name": "Gateway API - Merchants",
      "tags": [
        "Gateway API - Merchants - Global"
      ]
    },
    {
      "name": "Gateway API - Offers",
      "tags": [
        "Gateway API - Offers - Global"
      ]
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  }
}